git config --global user.name "abdfattahz"
git config --global user.email "203197396+abdfattahz@users.noreply.github.com"

14 Aug 2025
#!/bin/bash

echo Good day $(whoami)
echo The date is $(date +"%D") The time is $(date +"%H:%M:%S")

-----

#!/bin/bash

read -p "Please input your Currents (Amp) value: " i
read -p "Please input your Resistor (Ohm) value: " r

v=$(expr $i \* $r)
echo "Your Voltage (V) is: $v"
p=$(expr $i \* $v)
echo "The Power (P) dissipated is: $p"

-----

#!/bin/bash

read -p "Please enter a number between 10 to 20: " num

if [[ num -lt 10 || num -gt 20 ]]; then
  echo "This number is not between 10 to 20"
  exit 1
fi

for ((i = num; i >= 0; i--)); do
  echo $i
done

echo

echo Modified version:
for ((i = num; i >= 0; i--)); do
  if [[ i -ge 3 && i -le 7 ]]; then
    continue
  fi
  echo $i
done

-----

#!/bin/bash

file1="file1.txt"
file2="file2.txt"

#len1=$(wc -m <"$file1")
#len2=$(wc -m <"$file2")

len1=$(wc -m $file1 | cut -d" " -f1)
len2=$(wc -m $file2 | cut -d" " -f1)

if [ "$len1" -gt "$len2" ]; then
  echo $file1
  cat file1.txt
else
  echo $file2
  cat file2.txt
fi

if grep -q "mango" "$file1"; then
  echo Fruit
fi

if grep -q "dog" "$file1"; then
  echo Pet
fi

-----

14 Aug 2025

# combine.sh
echo "$(./hello.sh) $(./world.sh)"

# hello.sh
echo "Hello"

# world.sh
echo "World"

-----

# combine.sh
#!/bin/bash

./hello
echo "Return of hello is $?"
./world
echo "Return of world is $?"

# hello.c
#include <stdio.h>

int main(void) {
  printf("Hello");
  return 123;
}

# world.c
#include <stdio.h>

int main(void) {
  printf("World");
  return 0;
}

-----

#include <stdio.h>
#include <stdlib.h>

int main () {
  char buffer[1024];
  FILE *fp = popen("ls -l", "r");

  if(fp == NULL) {
    perror("popen");
    return 1;
  }

  while(fgets(buffer, sizeof(buffer), fp) != NULL) {
  printf("OUTPUT: %s", buffer);
  }

  pclose(fp);
  return 0;
}

-----

#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

int main () {
  char buffer[1024];
  FILE *fp = popen("ls -l *.sh", "r");
  uint32_t count = 0;

  if(fp == NULL) {
    perror("popen");
    return 1;
  }

  while(fgets(buffer, sizeof(buffer), fp) != NULL) {
    count++;
    printf("OUTPUT: %s ", buffer);
  }

  printf("There are: %u .sh files here \n", count);

  pclose(fp);
  return 0;
}

-----

#include <stdio.h>
#include <stdlib.h>

int main () {
  char buffer[1024];
  FILE *fp = popen("ls -l *.sh | wc -l", "r");

  if(fp == NULL) {
    perror("popen");
    return 1;
  }

  while(fgets(buffer, sizeof(buffer), fp) != NULL) {
    printf("There are: %s .sh files here", buffer);
  }

  pclose(fp);
  return 0;
}

-----

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main () {
  char buffer[1024];
  FILE *fp = popen("df | grep /dev/sda2 | awk '{print $5}'", "r");

  if(fp == NULL) {
    perror("popen");
    return 1;
  }

  while(fgets(buffer, sizeof(buffer), fp) != NULL) {
    buffer[strcspn(buffer, "\n")] = '\0';
    
    int used = atoi(buffer);
    int free_space = 100 - used;

    printf("There are: %d%% free space", free_space);
  }

  pclose(fp);
  return 0;
}

-----

#!/bin/bash
echo "The current Date and Time is: $(date +"%d %b %y %a %I:%M:%S %p")"

-----

18 Aug 2025

topics learned:
for.php
foreach.php
if_else.php
match.php
multidimensionarray.php
switch.php
union_type.php
variadic.php
while.php

-----

19 Aug 2025

topics learned:
_get.php
_post.php
classObject.php
formPost.php

-----

20 Aug 2025

let Name = prompt("Please enter your name");
alert("Hello your name is " + Name);
document.getElementById("myName").innerHTML =
  "<H1> Hello your name is " + Name + " 👒 </H1>";

-----

//script.js

// Ask name just like before
// let Name = prompt("Please enter your name");
// alert("Hello your name is " + Name);
// document.getElementById("myName").innerHTML = "<h1>Hello " + Name + " 👒</h1>";

// Ask for a year
let year = parseInt(prompt("Please enter a year:"), 10);

// Function to test leap year
function isLeapYear(y) {
  if (y % 400 === 0) return true;
  if (y % 100 === 0) return false;
  return y % 4 === 0;
}

if (isNaN(year)) {
  alert("That was not a valid number! ❌");
} else {
  if (isLeapYear(year)) {
    alert(year + " is a leap year! 🎉");
  } else {
    // find nearest before
    let before = year - 1;
    while (!isLeapYear(before)) before--;

    // find nearest after
    let after = year + 1;
    while (!isLeapYear(after)) after++;

    alert(
      year +
        " is NOT a leap year 🚫\n" +
        "Previous leap year: " +
        before +
        "\n" +
        "Next leap year: " +
        after
    );
  }
}

-----

//script.js

let numStudent;

while (true) {
  numStudent = parseInt(prompt("Please enter a number between 1 to 20"));

  if (numStudent >= 1 && numStudent <= 20) break;
  alert("That was not a valid number! ❌");
}

let cgpas = [];

for (let i = 0; i < numStudent; i++) {
  let cgpa;
  while (true) {
    cgpa = Number.parseFloat(
      prompt(`Please enter student ${i + 1} CGPA (between 0.00 and 4.00):`)
    );
    if (!Number.isNaN(cgpa) && cgpa >= 0.0 && cgpa <= 4.0) break;
    alert(`CGPA for student ${i + 1} is invalid`);
  }
  cgpas.push(cgpa);
}

// (optional) compute stats and display
const min = Math.min(...cgpas);
const max = Math.max(...cgpas);
const avg = cgpas.reduce((a, b) => a + b, 0) / cgpas.length;

document.getElementById("results").innerHTML = `
  <h2>CGPA Results</h2>
  <p>Minimum CGPA: ${min.toFixed(2)}</p>
  <p>Maximum CGPA: ${max.toFixed(2)}</p>
  <p>Average CGPA: ${avg.toFixed(2)}</p>
`;

-----

21 Aug 2025

let Name = prompt("Please enter your name");

let words = Name.trim().split(/\s+/);
let formattedWords = [];

for (let i = 0; i < words.length; i++) {
  let word = words[i];
  let capitalized = word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
  formattedWords.push(capitalized);
}

let formattedName = formattedWords.join(" ");

document.getElementById("myName").innerHTML =
  "<h1>Hello your name is " + formattedName + " 😹</h1>";

-----

//script.js

let numStudent;

while (true) {
  numStudent = parseInt(prompt("Please enter a number between 1 to 20"));

  if (numStudent >= 1 && numStudent <= 20) break;
  alert("That was not a valid number! ❌");
}

let students = [];
for (let i = 0; i < numStudent; i++) {
  // 1) ask for student name
  let studentName = prompt(`Please enter student ${i + 1} name:`);
  // 2) format the name
  let words = studentName.trim().split(/\s+/);
  let formattedWords = [];
  for (let n = 0; n < words.length; n++) {
    let word = words[n];
    let capitalized =
      word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
    formattedWords.push(capitalized);
  }

  let formattedName = formattedWords.join(" ");

  // 3) ask for student age
  let studentAge;
  while (true) {
    studentAge = Number.parseInt(prompt(`Please enter student ${i + 1} age:`));
    if (!Number.isNaN(studentAge) && studentAge > 0) break;
    alert(`Age for student ${i + 1} is invalid`);
  }

  // 4) ask for student CGPA
  let cgpa;
  while (true) {
    cgpa = Number.parseFloat(
      prompt(`Please enter student ${i + 1} CGPA (between 0.00 and 4.00):`)
    );
    if (!Number.isNaN(cgpa) && cgpa >= 0.0 && cgpa <= 4.0) break;
    alert(`CGPA for student ${i + 1} is invalid`);
  }
  students.push({ studentName: formattedName, studentAge, cgpa });
}

// compute stats on numbers only
let min = students[0].cgpa;
let max = students[0].cgpa;
let sum = 0;

for (let k = 0; k < students.length; k++) {
  const s = students[k];
  if (s.cgpa < min) min = s.cgpa;
  if (s.cgpa > max) max = s.cgpa;
  sum += s.cgpa;
}

const avg = sum / students.length;

// build table rows with a loop
let rowsHTML = "";
for (let i = 0; i < students.length; i++) {
  const s = students[i];
  rowsHTML += `
    <tr>
      <td>${s.studentName}</td>
      <td>${s.studentAge}</td>
      <td>${s.cgpa.toFixed(2)}</td>
    </tr>`;
}

// render table + stats
document.getElementById("results").innerHTML = `
  <h2>CGPA Results</h2>
  <table border="1" cellpadding="6" cellspacing="0">
    <thead>
      <tr><th>Name</th><th>Age</th><th>CGPA</th></tr>
    </thead>
    <tbody>
      ${rowsHTML}
    </tbody>
  </table>
  <p>Minimum CGPA: ${min.toFixed(2)}</p>
  <p>Maximum CGPA: ${max.toFixed(2)}</p>
  <p>Average CGPA: ${avg.toFixed(2)}</p>
`;

-----

let numStudent;

while (true) {
  const v = prompt("Please enter a number between 1 to 20");
  if (v === null) continue;
  numStudent = parseInt(v, 10);
  if (!Number.isNaN(numStudent) && numStudent >= 1 && numStudent <= 20) break;
  alert("That was not a valid number! ❌");
}

const students = [];

function capitalizeName(raw) {
  return raw
    .trim()
    .split(/\s+/)
    .map((w) => (w[0] || "").toUpperCase() + (w.slice(1) || "").toLowerCase())
    .join(" ");
}

for (let i = 0; i < numStudent; i++) {
  // name
  let rawName = prompt(`Please enter student ${i + 1} name:`) || "";
  const studentName = capitalizeName(rawName);

  // age
  let studentAge;
  while (true) {
    const v = prompt(`Please enter student ${i + 1} age:`);
    studentAge = parseInt(v, 10);
    if (!Number.isNaN(studentAge) && studentAge > 0) break;
    alert("Invalid age");
  }

  // cgpa
  let cgpa;
  while (true) {
    const v = prompt(`Please enter student ${i + 1} CGPA (0.00–4.00):`);
    cgpa = parseFloat(v);
    if (!Number.isNaN(cgpa) && cgpa >= 0 && cgpa <= 4) break;
    alert("Invalid CGPA");
  }

  students.push({ studentName, studentAge, cgpa });

  // compute stats so far
  let min = students[0].cgpa;
  let max = students[0].cgpa;
  let sum = 0;

  // let rowsHTML = "";
  // for (let m = 0; m < students.length; m++) {
  //   const y = students[m];
  //   rowsHTML += `
  //     <tr>
  //       <td>${y.studentName}</td>
  //       <td>${y.studentAge}</td>
  //       <td>${y.cgpa.toFixed(2)}</td>
  //     </tr>`;
  // }

  for (let s of students) {
    if (s.cgpa < min) min = s.cgpa;
    if (s.cgpa > max) max = s.cgpa;
    sum += s.cgpa;
  }
  let avg = sum / students.length;

  // 👉 print to console
  console.table(students);
  console.log("Current Students:", students);
  console.log(`Min CGPA: ${min.toFixed(2)}`);
  console.log(`Max CGPA: ${max.toFixed(2)}`);
  console.log(`Avg CGPA: ${avg.toFixed(2)}`);
  console.log("------");
}

// compute stats on numbers only
let max = students[0].cgpa;
let min = students[0].cgpa;
let sum = 0;

for (let k = 0; k < students.length; k++) {
  const s = students[k];
  if (s.cgpa < min) min = s.cgpa;
  if (s.cgpa > max) max = s.cgpa;
  sum += s.cgpa;
}
const avg = sum / students.length;

// build table rows with a loop
let rowsHTML = "";
for (let i = 0; i < students.length; i++) {
  const s = students[i];
  rowsHTML += `
    <tr>
      <td>${s.studentName}</td>
      <td>${s.studentAge}</td>
      <td>${s.cgpa.toFixed(2)}</td>
    </tr>`;
}

// render table + stats
document.getElementById("results").innerHTML = `
  <h2>CGPA Results</h2>
  <table border="1" cellpadding="6" cellspacing="0">
    <thead>
      <tr><th>Name</th><th>Age</th><th>CGPA</th></tr>
    </thead>
    <tbody>
      ${rowsHTML}
    </tbody>
  </table>
  <p>Minimum CGPA: ${min.toFixed(2)}</p>
  <p>Maximum CGPA: ${max.toFixed(2)}</p>
  <p>Average CGPA: ${avg.toFixed(2)}</p>
`;

-----


let num1 = prompt("Please enter your first number");
let num2 = prompt("Please enter your second number");

num1 = Number(num1);
num2 = Number(num2);

let sum = num1 + num2;
let dif = num1 - num2;
let mul = num1 * num2;

let sElement = "<p> Summation is " + sum + "</p>";
sElement += "<p> Difference is " + dif + "</p>";
sElement += "<p> Multiplication is " + mul + "</p>";

document.getElementById("myName").innerHTML = sElement;

let num1 = prompt("Please enter your first number");
let num2 = prompt("Please enter your second number");

num1 = Number(num1);
num2 = Number(num2);

let sum = num1 + num2;
let dif = num1 - num2;
let mul = num1 * num2;

let sElement = "<p> Summation is " + sum + "</p>";
sElement += "<p> Difference is " + dif + "</p>";
sElement += "<p> Multiplication is " + mul + "</p>";

document.getElementById("myName").innerHTML = sElement;
